@model IEnumerable<Carts>
@if (Model.Count() != 0)
{
    <section>
        <div class="cart-main-wrapper mt-no-text">
            <div class="container custom-area">
                <div class="row">
                    <div class="col-lg-12 col-custom">
                        <div class="cart-table table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th class="pro-thumbnail">Image</th>
                                        <th class="pro-title">Product</th>
                                        <th class="pro-price">Price</th>
                                        <th class="pro-quantity">Quantity</th>
                                        <th class="pro-subtotal">Total</th>
                                        <th class="pro-remove">Remove</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td class="pro-thumbnail"><a href="#"><img class="img-fluid" src="@item.Product.ProductImage" alt="Product" /></a></td>
                                            <td class="pro-title">@item.Product.ProductName</td>
                                            <td class="pro-price"><span>@item.Product.ProductPrice</span></td>
                                            <td class="pro-quantity">
                                                <div class="quantity">
                                                    <div class="cart-plus-minus">
                                                        <!-- Nút giảm số lượng -->
                                                        <button class="minus-btn" onclick="decreaseQuantity('@item.Product.ProductId')">-</button>
                                                        <!-- Ô nhập liệu hiển thị số lượng -->
                                                        <input type="text" id="quantity-@item.Product.ProductId" value="@item.Qty" readonly />
                                                        <!-- Nút tăng số lượng -->
                                                        <button class="plus-btn" onclick="increaseQuantity('@item.Product.ProductId')">+</button>
                                                    </div>
                                                </div>
                                            </td>
                                            <!-- Cột tổng tiền -->
                                            <td class="pro-subtotal"><span>@(item.Qty * item.Product.ProductPrice)</span></td>
                                            <!-- Cột xóa sản phẩm khỏi giỏ hàng -->
                                            <td class="pro-remove"><a asp-controller="ShoppingCart" asp-action="RemoveFromShoppingCart" asp-route-pId="@item.Product.ProductId"><i class="lnr lnr-trash"></i></a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-5 ml-auto col-custom">
                        <div class="cart-calculator-wrapper">
                            <div class="cart-calculate-items">
                                <h3>Cart Totals</h3>
                                <div class="table-responsive">
                                    <table class="table">
                                        <tr>
                                            <td>Sub Total</td>
                                            <td>@ViewBag.TotalCart.ToString("c")</td>
                                        </tr>
                                        <tr>
                                            <td>Quantity total</td>
                                            <td>@Model.Sum(item => item.Qty)</td>
                                        </tr>
                                        <tr class="total">
                                            <td>Total</td>
                                            <td class="total-amount">@ViewBag.TotalCart</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                            <div class="cart-proceed">
                                <a asp-controller="Order" asp-action="Checkout" class="btn flosun-button primary-btn rounded-0 black-btn w-100">Proceed To Checkout</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
else
{

    <div style="margin-bottom: 100px;" class="container">
        <br><br><br><br>
        <div class="text-center">
            <img src="https://www.svgrepo.com/show/17356/empty-cart.svg" class="img-fluid"
                 style="width: 200px; height: 200px; margin-left: auto; margin-right: auto" alt="...">
            <br>
            <h1><strong>Your cart is empty</strong></h1>
            <br>
            <p>
                Before proceed to checkout you must add some products to your shopping cart. You will find a lot of
                interesting products on our "Shop" page.
            </p>
            <a style="background-color:#E72463;color:#fff;border:none;" asp-controller="Product" asp-action="Index" class="btn btn-primary w-20">
                Start Shopping
            </a>
        </div>
    </div>
}



<script>
    // Function to increase quantity
    function increaseQuantity(productId) {
        var quantityElement = document.getElementById('quantity-' + productId);
        var currentQuantity = parseInt(quantityElement.value);
        quantityElement.value = currentQuantity + 1;
        updateCartItemQuantity(productId, currentQuantity + 1);
    }

    // Function to decrease quantity
    function decreaseQuantity(productId) {
        var quantityElement = document.getElementById('quantity-' + productId);
        var currentQuantity = parseInt(quantityElement.value);
        if (currentQuantity > 1) {
            quantityElement.value = currentQuantity - 1;
            updateCartItemQuantity(productId, currentQuantity - 1);
        }
    }

    // Function to update cart item quantity
    function updateCartItemQuantity(productId, quantity) {
        // Tạo một đối tượng chứa dữ liệu cần gửi
        var data = {
            productId: productId,
            quantity: quantity
        };

        // Gửi yêu cầu AJAX bằng phương thức POST
        $.ajax({
            url: '/ShoppingCart/UpdateCartItemQuantity', 
            contentType: 'application/json', // Định dạng dữ liệu gửi đi
            data: JSON.stringify(data), // Chuyển đổi dữ liệu thành chuỗi JSON
            success: function (response) {
                // Xử lý phản hồi từ máy chủ nếu cần
                console.log('Update successful');
            },
            error: function (xhr, status, error) {
                // Xử lý lỗi nếu có
                console.error('Error:', error);
            }
        });
    }
</script>
